generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model blog {
  id            Int        @id @default(autoincrement())
  title         String     @unique(map: "title") @db.VarChar(150)
  content       String     @db.Text
  author_id     Int?
  is_verified   Boolean?   @default(false)
  thumbnail_url String?    @default("") @db.VarChar(255)
  created_at    DateTime?  @default(now()) @db.DateTime(0)
  updated_at    DateTime?  @default(now()) @db.DateTime(0)
  user          user?      @relation(fields: [author_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "blog_ibfk_1")
  blogtags      blogtags[]

  @@index([author_id], map: "author_id")
}

model blogtags {
  blog_id Int
  tag_id  Int
  blog    blog @relation(fields: [blog_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "blogtags_ibfk_1")
  tags    tags @relation(fields: [tag_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "blogtags_ibfk_2")

  @@id([blog_id, tag_id])
  @@index([tag_id], map: "tag_id")
}

model role {
  id        Int    @id @default(autoincrement())
  role_name String @unique(map: "role_name") @default("author") @db.VarChar(50)
  user      user[]
}

model tags {
  id       Int        @id @default(autoincrement())
  tag_name String     @unique(map: "tag_name") @db.VarChar(100)
  blogtags blogtags[]
}

model user {
  id            Int         @id @default(autoincrement())
  first_name    String      @db.VarChar(50)
  last_name     String      @db.VarChar(50)
  nickname      String?     @default("") @db.VarChar(50)
  date_of_birth DateTime?   @db.DateTime(0)
  profile_url   String?     @default("") @db.VarChar(255)
  username      String      @unique(map: "username") @db.VarChar(30)
  password      String      @db.VarChar(255)
  phone_number  String?     @db.VarChar(11)
  active        Boolean     @default(false)
  role_id       Int         @default(1)
  created_at    DateTime?   @default(now()) @db.DateTime(0)
  updated_at    DateTime?   @default(now()) @db.DateTime(0)
  blog          blog[]
  role          role        @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_ibfk_1")
  userwallet    userwallet?

  @@index([role_id], map: "role_id")
}

model userwallet {
  id                  Int       @id
  balance             Decimal?  @default(0) @db.Decimal(10, 0)
  account_number      String?   @unique(map: "account_number") @db.VarChar(18)
  account_shaba       String?   @unique(map: "account_shaba") @db.VarChar(18)
  account_card_number String?   @unique(map: "account_card_number") @db.VarChar(16)
  account_owner_name  String?   @db.VarChar(255)
  is_valid            Boolean?  @default(false)
  updated_at          DateTime? @default(now()) @db.DateTime(0)
  user                user      @relation(fields: [id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "userwallet_ibfk_1")
}
